{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service class ApiService that centralizes HTTP API calls, including GET, POST, PUT, and DELETE methods. It manages auth tokens, constructs URLs, and handles errors, serving as a core communication layer with a backend API in an Angular project.", "external_files": ["../../environments/environment", "@angular/core", "@angular/common", "@angular/common/http", "rxjs", "rxjs/operators"], "external_methods": ["inject", "isPlatformBrowser", "catchError", "throwError"], "published": ["ApiService"], "classes": [{"name": "ApiService", "description": "Angular service providing methods for HTTP communication with backend API, including token management and error handling."}], "methods": [{"name": "get", "description": "Performs an HTTP GET request to a specified endpoint, attaching auth headers if available."}, {"name": "post", "description": "Performs an HTTP POST request to a specified endpoint, attaching auth headers if available."}, {"name": "put", "description": "Performs an HTTP PUT request to a specified endpoint, attaching auth headers if available."}, {"name": "delete", "description": "Performs an HTTP DELETE request to a specified endpoint, attaching auth headers if available."}, {"name": "buildUrl", "description": "Constructs the full URL from the base API URL and the endpoint."}, {"name": "withAuthHeader", "description": "Creates HTTP headers with an Authorization token if the code runs in a browser environment."}, {"name": "handleError", "description": "Processes HTTP errors to return a standardized error message."}], "calls": ["this.http.get", "this.http.post", "this.http.put", "this.http.delete", "this.buildUrl", "this.withAuthHeader", "throwError"], "search-terms": ["Angular ApiService HTTP", "JWT token auth", "Environment configuration", "Error handling", "TypeScript Angular service"], "state": 2, "file_id": 23, "knowledge_revision": 57, "git_revision": "", "revision_history": [{"47": ""}, {"56": ""}, {"57": ""}], "ctags": [{"_type": "tag", "name": "ApiService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162086/notes_frontend/src/app/services/api.service.ts", "pattern": "/^export class ApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162086/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const base = this.apiBase.replace(\\/\\\\\\/+$\\/, '');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162086/notes_frontend/src/app/services/api.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162086/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    let message = 'An unexpected error occurred.';$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162086/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const path = endpoint.replace(\\/^\\\\\\/+\\/, '');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-162076-162086/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const token = typeof localStorage !== 'undefined' ? localStorage.getItem('notes_jwt') : null/", "language": "TypeScript", "kind": "constant"}], "hash": "da639731492f14c840a1d6a8e4dfd2bf", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/api.service.ts", "fields": [{"name": "private http = inject(HttpClient);", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}, {"name": "let message = 'An unexpected error occurred.';", "scope": "", "scopeKind": "", "description": "unavailable"}]}